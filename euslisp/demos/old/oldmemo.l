(progn (start t) (go-coop-pose) (send *ri* :set-ref-forces (list (float-vector 0 0 (* (+ (send *robot* :weight) 4.5) 4.9)) (float-vector 0 0 (* (+ (send *robot* :weight) 4.5) 4.9)) (float-vector 0 0 (* -1.0 (* 4.5 4.9))) (float-vector 0 0 (* -1.0 (* 4.5 4.9))) ) 3000) (send *robot* :arms :move-end-pos #f(0 0 80) :world) (send *ri* :angle-vector (send *robot* :angle-vector)) (send *ri* :wait-interpolation) (send *robot* :arms :move-end-pos #f(0 0 100)) (send *ri* :angle-vector (send *robot* :angle-vector) 5000) (send *ri* :wait-interpolation) (read-line) (send *ri* :start-log) (unix:sleep 1) (send *ri* :go-pos -0.5 1.5 90) (unix:sleep 1) (save-log))
(progn (start t) (go-coop-pose) (send *ri* :set-ref-forces (list (float-vector 0 0 (* (+ (* (send *robot* :weight) 0.001) 4.5) 4.9)) (float-vector 0 0 (* (+ (* (send *robot* :weight) 0.001) 4.5) 4.9)) (float-vector 0 0 (* -1.0 (* 4.5 4.9))) (float-vector 0 0 (* -1.0 (* 4.5 4.9))) ) 3000) (send *robot* :arms :move-end-pos #f(0 0 80) :world) (send *ri* :angle-vector (send *robot* :angle-vector)) (send *ri* :wait-interpolation) (send *robot* :arms :move-end-pos #f(0 0 100)) (send *ri* :angle-vector (send *robot* :angle-vector) 5000) (send *ri* :wait-interpolation) (unix:sleep 5) (send *ri* :start-log) (send *ri* :start-box-balancer) (unix:sleep 5) (send *ri* :go-pos -0.5 1.5 90) (unix:sleep 5) (save-log))

(progn (setq req (instance carry_objects::LiftBoxRequest :init)) (send req :boxes (list 9 8 7)) (setq box_weight (send (ros::service-call "lift_box_id" req) :weight)))
